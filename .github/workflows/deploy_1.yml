# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'  # Enable npm cache

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci  # 'npm ci' ensures a clean install based on package-lock.json

      - name: Build the project
        run: npm run build

      # Optional: Check the size of the artifact before deploying
      - name: Check artifact size
        run: |
          ARTIFACT_SIZE=$(du -sh ./dist | cut -f1)
          echo "Artifact size is $ARTIFACT_SIZE"
          if [[ "$ARTIFACT_SIZE" > "1G" ]]; then
            echo "Artifact size exceeds 1GB, aborting deployment"
            exit 1
          fi

      # Clean up unnecessary files in the artifact
      - name: Remove unnecessary files
        run: |
          # Example of cleaning up .DS_Store and Thumbs.db
          find ./dist -name '.DS_Store' -exec rm -f {} \;
          find ./dist -name 'Thumbs.db' -exec rm -f {} \;
          # Add any other unnecessary files you want to remove
          find ./dist -name '.*' -not -name '.git' -exec rm -rf {} \;  # Remove hidden files except .git

      - name: Setup Pages for Deployment
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: "github-pages"
          path: './dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
